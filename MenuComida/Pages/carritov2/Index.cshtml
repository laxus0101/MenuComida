@page
@model MenuComida.Pages.carritov2.IndexModel

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carrito de Compras</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://www.paypal.com/sdk/js?client-id=AdJDx5es9Sl3zBbqmGsUMpKTOe0qmWDPCSvgCdJb6qawtVplE5Iw960Bjb61Mw6Ob8ydurkJChez6Kj8&currency=MXN"></script>
    <style>
        :root {
            --color-primario: #FB4B01;
            --color-secundario: #353A40;
            --color-terciario: #F79A0A;
            --color-fondo: #F5F5F5;
            --color-icono: #008E97;
        }

        body {
            background-color: var(--color-fondo);
            font-family: Arial, sans-serif;
        }

        .cart-container {
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .cart-header {
            color: var(--color-primario);
            font-weight: bold;
            font-size: 2rem;
            text-align: center;
            margin-bottom: 20px;
        }

        .cart-item {
            display: flex;
            align-items: center;
            padding: 15px;
            margin-bottom: 1rem;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.05);
            transition: transform 0.2s ease;
        }

            .cart-item:hover {
                transform: scale(1.02);
            }

            .cart-item img {
                width: 90px;
                height: 90px;
                border-radius: 10px;
                margin-right: 20px;
            }

        .cart-item-details {
            flex-grow: 1;
        }

        .cart-item-title {
            font-size: 1.4rem;
            font-weight: bold;
            color: var(--color-secundario);
            margin-bottom: 5px;
        }

        .cart-item-price {
            color: var(--color-terciario);
            font-weight: bold;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
        }

            .quantity-controls button {
                background-color: var(--color-primario);
                color: white;
                border: none;
                padding: 0.3rem 0.6rem;
                font-size: 1.2rem;
                border-radius: 6px;
                margin: 0 5px;
                cursor: pointer;
            }

        .quantity-input {
            width: 50px;
            text-align: center;
            font-weight: bold;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 0.3rem;
            color: var(--color-secundario);
            background-color: #F5F5F5;
            display: inline-block;
        }

        .remove-btn {
            color: var(--color-icono);
            font-size: 1.5rem;
            cursor: pointer;
            margin-left: 10px;
        }

        .cart-total {
            text-align: right;
            margin-top: 30px;
        }

            .cart-total h4 {
                color: var(--color-primario);
                font-size: 1.6rem;
            }
    </style>
</head>
<body>

    <div class="cart-container" style="margin-bottom: 500px;">
        <h2 class="cart-header">Tu Carrito</h2>

        <!-- Artículo en el carrito -->
        @foreach (var item in Model.carritoo)
        {
            <div class="cart-item">
                <img src="@item.imagen" alt="@item.producto">
                <div class="cart-item-details">
                    <div class="cart-item-title">@item.producto</div>
                    <div class="cart-item-price">$@item.precio MXN</div>
                </div>
                <form method="post" asp-page-handler="Update">
@*                     <input type="hidden" name="producto" value="@item.producto" />
                    <input type="hidden" asp-for="@item.idpedido" name="@item.idpedido" />
                    <input type="hidden" asp-for="@item.producto" name="@item.producto" />
                    <input type="hidden" asp-for="@item.imagen" name="@item.imagen" />
                    <input type="hidden" asp-for="@item.cantidad" name="@item.cantidad" id="cantidadInputt-@item.idpedido" />
                    <input type="hidden" asp-for="@item.precio" name="@item.precio" />
                    <input type="hidden" asp-for="@item.idUsuario" name="@item.idUsuario" /> *@
                    @* a *@
                    <input type="hidden" asp-for="carrito.idpedido" name="@item.idpedido" />
                    <input type="hidden" asp-for="carrito.producto" name="@item.producto" />
                    <input type="hidden" asp-for="carrito.imagen" name="@item.imagen" />
                    <input type="hidden" asp-for="carrito.cantidad" name="@item.cantidad" id="cantidadInputt-@item.idpedido" />
                    <input type="hidden" asp-for="carrito.precio" name="@item.precio" />
                    <input type="hidden" asp-for="carrito.idUsuario" name="@item.idUsuario" />
                   @*  <div class="quantity-controls">

                        <button type="button" class="btn btn-secondary" id="decrement-@item.idpedido">-</button>
                        <span class="quantity-input" id="cantidadInput-@item.idpedido">@item.cantidad</span>
                        <button type="button" class="btn btn-secondary" id="increment-@item.idpedido">+</button>

                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary"/>
                    </div> *@
                </form>



                <form method="post" asp-page-handler="Delete">
                    <input type="hidden" name="producto" value="@item.producto" />
                    <button type="submit" class="remove-btn"><i class="bi bi-trash"></i></button>
                </form>


            </div>

        }

        <div class="cart-total">
            <h4>Total: <span id="cart-total-price">0</span></h4>
        </div>
        <div id="paypal-button-container"></div>
    </div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>


    document.addEventListener('DOMContentLoaded', function () {updateTotal();
    document.querySelectorAll('.cart-item').forEach(function (item) {
        var removeButton = item.querySelector('.remove-btn');
        removeButton.addEventListener('click', function () {
            setTimeout(updateTotal, 100);
        });
    });

    function updateTotal() {
        let cartItems = document.querySelectorAll('.cart-item');
        let total = 0;

        cartItems.forEach(item => {
            let itemPrice = parseFloat(item.querySelector('.cart-item-price').textContent.replace('$', '').replace(' MXN', ''));
            let itemQuantity = parseInt(item.querySelector('.quantity-input')?.textContent || '1');
            total += itemPrice * itemQuantity;
        });

        document.getElementById('cart-total-price').textContent = `$${total.toFixed(2)} MXN`;
    }
    });

            document.addEventListener('DOMContentLoaded', function () {
                updateTotal();

                document.querySelectorAll('.cart-item').forEach(function (item) {
                    var removeButton = item.querySelector('.remove-btn');
                    removeButton.addEventListener('click', function () {
                        setTimeout(updateTotal, 100);
                    });
                });

                function updateTotal() {
                    let cartItems = document.querySelectorAll('.cart-item');
                    let total = 0;

                    cartItems.forEach(item => {
                        let itemPrice = parseFloat(item.querySelector('.cart-item-price').textContent.replace('$', '').replace(' MXN', ''));
                        let itemQuantity = parseInt(item.querySelector('.quantity-input')?.textContent || '1'); // Si no hay cantidad, asume 1
                        total += itemPrice * itemQuantity;
                    });

                    document.getElementById('cart-total-price').textContent = `$${total.toFixed(2)} MXN`;
                }

                // Configurar el botón de PayPal
                paypal.Buttons({
                    createOrder: function (data, actions) {
                        // Crear un pedido con el total calculado
                        let totalAmount = parseFloat(document.getElementById('cart-total-price').textContent.replace('$', '').replace(' MXN', ''));
                        return actions.order.create({
                            purchase_units: [{
                                amount: {
                                    value: totalAmount.toFixed(2) // Monto total del carrito
                                }
                            }]
                        });
                    },
                    onApprove: function (data, actions) {
                        // Capturar el pago después de la aprobación
                        return actions.order.capture().then(function (details) {
                            alert('Pago completado por ' + details.payer.name.given_name);
                            // Aquí puedes agregar lógica adicional, como redirigir al usuario o actualizar la base de datos
                        });
                    },
                    // onApprove: function (data, actions) {
                    //     return actions.order.capture().then(function (details) {
                    //         alert('Pago completado por ' + details.payer.name.given_name);

                    //         // Llamada al servidor para vaciar el carrito
                    //         fetch('/carritov2/Index?handler=ClearCart', {
                    //             method: 'POST'
                    //         }).then(response => {
                    //             if (response.ok) {
                    //                 alert('Carrito vaciado después de la compra');
                    //                 location.reload(); // Recargar la página o redirigir al usuario
                    //             } else {
                    //                 alert('Error al vaciar el carrito');
                    //             }
                    //         }).catch(error => {
                    //             console.error('Error:', error);
                    //             alert('Error al conectar con el servidor');
                    //         });
                    //     });
                    // },


                    onError: function (err) {
                        console.error('Error en el pago:', err);
                        alert('Hubo un error al procesar el pago. Inténtalo de nuevo.');
                    }
                }).render('#paypal-button-container');
            });



    </script>
}


</body>
</html>